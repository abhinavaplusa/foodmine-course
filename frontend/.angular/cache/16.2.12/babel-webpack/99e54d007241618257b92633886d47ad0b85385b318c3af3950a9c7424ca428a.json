{"ast":null,"code":"import _asyncToGenerator from \"/home/abhinav/Desktop/foodmine-course/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/order.service\";\nimport * as i2 from \"src/app/services/cart.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nconst _c0 = [\"paypal\"];\nlet PaypalButtonComponent = /*#__PURE__*/(() => {\n  class PaypalButtonComponent {\n    constructor(orderService, cartService, router, toastrService) {\n      this.orderService = orderService;\n      this.cartService = cartService;\n      this.router = router;\n      this.toastrService = toastrService;\n    }\n    ngOnInit() {\n      var _this = this;\n      const self = this;\n      paypal.Buttons({\n        createOrder: (data, actions) => {\n          return actions.order.create({\n            purchase_units: [{\n              amount: {\n                currency_code: 'CAD',\n                value: self.order.totalPrice\n              }\n            }]\n          });\n        },\n        onApprove: function () {\n          var _ref = _asyncToGenerator(function* (data, actions) {\n            const payment = yield actions.order.capture();\n            _this.order.paymentId = payment.id;\n            self.orderService.pay(_this.order).subscribe({\n              next: orderId => {\n                _this.cartService.clearCart();\n                _this.router.navigateByUrl('/track/' + orderId);\n                _this.toastrService.success('Payment Saved Successfully', 'Success');\n              },\n              error: error => {\n                _this.toastrService.error('Payment Save Failed', 'Error');\n              }\n            });\n          });\n          return function onApprove(_x, _x2) {\n            return _ref.apply(this, arguments);\n          };\n        }(),\n        onError: err => {\n          this.toastrService.error('Payment Failed', 'Error');\n          console.log(err);\n        }\n      }).render(this.paypalElement.nativeElement);\n    }\n    static #_ = this.ɵfac = function PaypalButtonComponent_Factory(t) {\n      return new (t || PaypalButtonComponent)(i0.ɵɵdirectiveInject(i1.OrderService), i0.ɵɵdirectiveInject(i2.CartService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastrService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PaypalButtonComponent,\n      selectors: [[\"paypal-button\"]],\n      viewQuery: function PaypalButtonComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paypalElement = _t.first);\n        }\n      },\n      inputs: {\n        order: \"order\"\n      },\n      decls: 2,\n      vars: 0,\n      consts: [[\"paypal\", \"\"]],\n      template: function PaypalButtonComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"div\", null, 0);\n        }\n      }\n    });\n  }\n  return PaypalButtonComponent;\n})();\nexport { PaypalButtonComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}