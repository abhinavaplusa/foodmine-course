{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction InputValidationComponent_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const errorMessage_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", errorMessage_r2, \" \");\n  }\n}\nfunction InputValidationComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, InputValidationComponent_div_0_div_1_Template, 2, 1, \"div\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.errorMessages);\n  }\n}\nconst VALIDATORS_MESSAGES = {\n  required: 'Should not be empty',\n  email: 'Email is not valid',\n  minlength: 'Field is too short',\n  notMatch: 'Password and Confirm does not match'\n};\nlet InputValidationComponent = /*#__PURE__*/(() => {\n  class InputValidationComponent {\n    constructor() {\n      this.showErrorsWhen = true;\n      this.errorMessages = [];\n    }\n    ngOnChanges(changes) {\n      this.checkValidation();\n    }\n    ngOnInit() {\n      this.control.statusChanges.subscribe(() => {\n        this.checkValidation();\n      });\n      this.control.valueChanges.subscribe(() => {\n        this.checkValidation();\n      });\n    }\n    checkValidation() {\n      const errors = this.control.errors;\n      if (!errors) {\n        this.errorMessages = [];\n        return;\n      }\n      const errorKeys = Object.keys(errors);\n      this.errorMessages = errorKeys.map(key => VALIDATORS_MESSAGES[key]);\n    }\n    static #_ = this.ɵfac = function InputValidationComponent_Factory(t) {\n      return new (t || InputValidationComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: InputValidationComponent,\n      selectors: [[\"input-validation\"]],\n      inputs: {\n        control: \"control\",\n        showErrorsWhen: \"showErrorsWhen\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 1,\n      vars: 1,\n      consts: [[\"class\", \"error-list\", 4, \"ngIf\"], [1, \"error-list\"], [4, \"ngFor\", \"ngForOf\"]],\n      template: function InputValidationComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, InputValidationComponent_div_0_Template, 2, 1, \"div\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessages && ctx.showErrorsWhen);\n        }\n      },\n      dependencies: [i1.NgForOf, i1.NgIf],\n      styles: [\".error-list[_ngcontent-%COMP%]{color:red;text-align:center;font-size:.95rem}\"]\n    });\n  }\n  return InputValidationComponent;\n})();\nexport { InputValidationComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}