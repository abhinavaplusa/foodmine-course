{"ast":null,"code":"import { FOODS_BY_SEARCH_URL, FOODS_BY_TAG_URL, FOODS_TAGS_URL, FOODS_URL, FOOD_BY_ID_URL } from '../shared/constants/urls';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass FoodService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get(FOODS_URL);\n  }\n  getAllFoodsBySearchTerm(searchTerm) {\n    return this.http.get(FOODS_BY_SEARCH_URL + searchTerm);\n  }\n  getAllTags() {\n    return this.http.get(FOODS_TAGS_URL);\n  }\n  getAllFoodsByTag(tag) {\n    return tag === \"All\" ? this.getAll() : this.http.get(FOODS_BY_TAG_URL + tag);\n  }\n  getFoodById(foodId) {\n    return this.http.get(FOOD_BY_ID_URL + foodId);\n  }\n  static #_ = this.ɵfac = function FoodService_Factory(t) {\n    return new (t || FoodService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FoodService,\n    factory: FoodService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { FoodService };","map":{"version":3,"names":["FOODS_BY_SEARCH_URL","FOODS_BY_TAG_URL","FOODS_TAGS_URL","FOODS_URL","FOOD_BY_ID_URL","FoodService","constructor","http","getAll","get","getAllFoodsBySearchTerm","searchTerm","getAllTags","getAllFoodsByTag","tag","getFoodById","foodId","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/abhinav/Desktop/foodmine-course/frontend/src/app/services/food.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { sample_foods, sample_tags } from 'src/data';\nimport { FOODS_BY_SEARCH_URL, FOODS_BY_TAG_URL, FOODS_TAGS_URL, FOODS_URL, FOOD_BY_ID_URL } from '../shared/constants/urls';\nimport { Food } from '../shared/models/Food';\nimport { Tag } from '../shared/models/Tag';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FoodService {\n\n  constructor(private http:HttpClient) { }\n\n  getAll(): Observable<Food[]> {\n    return this.http.get<Food[]>(FOODS_URL);\n  }\n\n  getAllFoodsBySearchTerm(searchTerm: string) {\n    return this.http.get<Food[]>(FOODS_BY_SEARCH_URL + searchTerm);\n  }\n\n  getAllTags(): Observable<Tag[]> {\n    return this.http.get<Tag[]>(FOODS_TAGS_URL);\n  }\n\n  getAllFoodsByTag(tag: string): Observable<Food[]> {\n    return tag === \"All\" ?\n      this.getAll() :\n      this.http.get<Food[]>(FOODS_BY_TAG_URL + tag);\n  }\n\n  getFoodById(foodId:string):Observable<Food>{\n    return this.http.get<Food>(FOOD_BY_ID_URL + foodId);\n  }\n\n}\n"],"mappings":"AAIA,SAASA,mBAAmB,EAAEC,gBAAgB,EAAEC,cAAc,EAAEC,SAAS,EAAEC,cAAc,QAAQ,0BAA0B;;;AAI3H,MAGaC,WAAW;EAEtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAASN,SAAS,CAAC;EACzC;EAEAO,uBAAuBA,CAACC,UAAkB;IACxC,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAST,mBAAmB,GAAGW,UAAU,CAAC;EAChE;EAEAC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAQP,cAAc,CAAC;EAC7C;EAEAW,gBAAgBA,CAACC,GAAW;IAC1B,OAAOA,GAAG,KAAK,KAAK,GAClB,IAAI,CAACN,MAAM,EAAE,GACb,IAAI,CAACD,IAAI,CAACE,GAAG,CAASR,gBAAgB,GAAGa,GAAG,CAAC;EACjD;EAEAC,WAAWA,CAACC,MAAa;IACvB,OAAO,IAAI,CAACT,IAAI,CAACE,GAAG,CAAOL,cAAc,GAAGY,MAAM,CAAC;EACrD;EAAC,QAAAC,CAAA,G;qBAxBUZ,WAAW,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXjB,WAAW;IAAAkB,OAAA,EAAXlB,WAAW,CAAAmB,IAAA;IAAAC,UAAA,EAFV;EAAM;;SAEPpB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}