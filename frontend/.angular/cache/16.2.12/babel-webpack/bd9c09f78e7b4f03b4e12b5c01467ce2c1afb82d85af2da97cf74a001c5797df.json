{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nlet LoadingService = /*#__PURE__*/(() => {\n  class LoadingService {\n    constructor() {\n      this.isLoadingSubject = new BehaviorSubject(false);\n    }\n    showLoading() {\n      this.isLoadingSubject.next(true);\n    }\n    hideLoading() {\n      this.isLoadingSubject.next(false);\n    }\n    get isLoading() {\n      return this.isLoadingSubject.asObservable();\n    }\n    static #_ = this.ɵfac = function LoadingService_Factory(t) {\n      return new (t || LoadingService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LoadingService,\n      factory: LoadingService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return LoadingService;\n})();\nexport { LoadingService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}