{"ast":null,"code":"import { HttpEventType } from '@angular/common/http';\nimport { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/loading.service\";\nvar pendingRequests = 0;\nlet LoadingInterceptor = /*#__PURE__*/(() => {\n  class LoadingInterceptor {\n    constructor(loadingService) {\n      this.loadingService = loadingService;\n    }\n    intercept(request, next) {\n      this.loadingService.showLoading();\n      pendingRequests = pendingRequests + 1;\n      return next.handle(request).pipe(tap({\n        next: event => {\n          if (event.type === HttpEventType.Response) {\n            this.handleHideLoading();\n          }\n        },\n        error: _ => {\n          this.handleHideLoading();\n        }\n      }));\n    }\n    handleHideLoading() {\n      pendingRequests = pendingRequests - 1;\n      if (pendingRequests === 0) this.loadingService.hideLoading();\n    }\n    static #_ = this.ɵfac = function LoadingInterceptor_Factory(t) {\n      return new (t || LoadingInterceptor)(i0.ɵɵinject(i1.LoadingService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LoadingInterceptor,\n      factory: LoadingInterceptor.ɵfac\n    });\n  }\n  return LoadingInterceptor;\n})();\nexport { LoadingInterceptor };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}